<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classostk_1_1physics_1_1_environment" kind="class" language="C++" prot="public">
    <compoundname>ostk::physics::Environment</compoundname>
    <includes refid="_environment_8hpp" local="no">Environment.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classostk_1_1physics_1_1_environment_1a4bb957c2f0141946aeef523afa190148" prot="private" static="no" mutable="no">
        <type><ref refid="classostk_1_1physics_1_1time_1_1_instant" kindref="compound">Instant</ref></type>
        <definition>Instant ostk::physics::Environment::instant_</definition>
        <argsstring></argsstring>
        <name>instant_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Physics/Environment.hpp" line="209" column="13" bodyfile="include/OpenSpaceToolkit/Physics/Environment.hpp" bodystart="209" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classostk_1_1physics_1_1_environment_1a071c4dc3b6a81302279464b954d70cdd" prot="private" static="no" mutable="no">
        <type>Array&lt; Shared&lt; const <ref refid="classostk_1_1physics_1_1environment_1_1_object" kindref="compound">Object</ref> &gt; &gt;</type>
        <definition>Array&lt;Shared&lt;const Object&gt; &gt; ostk::physics::Environment::objects_</definition>
        <argsstring></argsstring>
        <name>objects_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Physics/Environment.hpp" line="210" column="11" bodyfile="include/OpenSpaceToolkit/Physics/Environment.hpp" bodystart="210" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classostk_1_1physics_1_1_environment_1a149113884598532bd3f7775008c72f81" prot="private" static="no" mutable="no">
        <type>Shared&lt; const <ref refid="classostk_1_1physics_1_1environment_1_1_object" kindref="compound">Object</ref> &gt;</type>
        <definition>Shared&lt;const Object&gt; ostk::physics::Environment::centralCelestialObject_</definition>
        <argsstring></argsstring>
        <name>centralCelestialObject_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Physics/Environment.hpp" line="211" column="12" bodyfile="include/OpenSpaceToolkit/Physics/Environment.hpp" bodystart="211" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classostk_1_1physics_1_1_environment_1a6e305f5d49ea34ed7e37459086c727f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ostk::physics::Environment::Environment</definition>
        <argsstring>(const Instant &amp;anInstant, const Array&lt; Shared&lt; const Object &gt;&gt; &amp;anObjectArray, const bool &amp;setGlobalInstance=false)</argsstring>
        <name>Environment</name>
        <param>
          <type>const <ref refid="classostk_1_1physics_1_1time_1_1_instant" kindref="compound">Instant</ref> &amp;</type>
          <declname>anInstant</declname>
        </param>
        <param>
          <type>const Array&lt; Shared&lt; const <ref refid="classostk_1_1physics_1_1environment_1_1_object" kindref="compound">Object</ref> &gt;&gt; &amp;</type>
          <declname>anObjectArray</declname>
        </param>
        <param>
          <type>const bool &amp;</type>
          <declname>setGlobalInstance</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">anInstant</parametername>
</parameternamelist>
<parameterdescription>
<para>An instant </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">An</parametername>
</parameternamelist>
<parameterdescription>
<para>array of shared pointers to objects </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">setGlobalInstance</parametername>
</parameternamelist>
<parameterdescription>
<para>True if the global environment instance should be set </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Physics/Environment.hpp" line="41" column="5" bodyfile="src/OpenSpaceToolkit/Physics/Environment.cpp" bodystart="26" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1physics_1_1_environment_1af55853ce0d679a89f36c335719854784" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ostk::physics::Environment::Environment</definition>
        <argsstring>(const Shared&lt; const Object &gt; &amp;aCentralCelestialObject, const Array&lt; Shared&lt; const Object &gt;&gt; &amp;anObjectArray, const Instant &amp;anInstant=Instant::J2000(), const bool &amp;setGlobalInstance=false)</argsstring>
        <name>Environment</name>
        <param>
          <type>const Shared&lt; const <ref refid="classostk_1_1physics_1_1environment_1_1_object" kindref="compound">Object</ref> &gt; &amp;</type>
          <declname>aCentralCelestialObject</declname>
        </param>
        <param>
          <type>const Array&lt; Shared&lt; const <ref refid="classostk_1_1physics_1_1environment_1_1_object" kindref="compound">Object</ref> &gt;&gt; &amp;</type>
          <declname>anObjectArray</declname>
        </param>
        <param>
          <type>const <ref refid="classostk_1_1physics_1_1time_1_1_instant" kindref="compound">Instant</ref> &amp;</type>
          <declname>anInstant</declname>
          <defval><ref refid="classostk_1_1physics_1_1time_1_1_instant_1a3f84d0c2d0b140326d3b172b54e3ffff" kindref="member">Instant::J2000</ref>()</defval>
        </param>
        <param>
          <type>const bool &amp;</type>
          <declname>setGlobalInstance</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">aCentralCelestialObject</parametername>
</parameternamelist>
<parameterdescription>
<para>A central body </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">anObjectArray</parametername>
</parameternamelist>
<parameterdescription>
<para>An array of shared pointers to objects </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">anInstant</parametername>
</parameternamelist>
<parameterdescription>
<para>An instant. Defaults to J2000 epoch. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">setGlobalInstance</parametername>
</parameternamelist>
<parameterdescription>
<para>True if the global environment instance should be set </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Physics/Environment.hpp" line="53" column="5" bodyfile="src/OpenSpaceToolkit/Physics/Environment.cpp" bodystart="39" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1physics_1_1_environment_1ac597f4d54313d272bc24f62a9f2c0f5c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ostk::physics::Environment::isDefined</definition>
        <argsstring>() const</argsstring>
        <name>isDefined</name>
        <briefdescription>
<para>Check if environment is defined. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if environment is defined </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Physics/Environment.hpp" line="72" column="10" bodyfile="src/OpenSpaceToolkit/Physics/Environment.cpp" bodystart="89" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1physics_1_1_environment_1af83819fdcd1586e185ce21e92ce574ed" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ostk::physics::Environment::hasObjectWithName</definition>
        <argsstring>(const String &amp;aName) const</argsstring>
        <name>hasObjectWithName</name>
        <param>
          <type>const String &amp;</type>
          <declname>aName</declname>
        </param>
        <briefdescription>
<para>Returns true if environment contains objects with a given name. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">aName</parametername>
</parameternamelist>
<parameterdescription>
<para>An object name </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if environment contains objects with a given name </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Physics/Environment.hpp" line="79" column="10" bodyfile="src/OpenSpaceToolkit/Physics/Environment.cpp" bodystart="94" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1physics_1_1_environment_1a443a17fa0d23109c0918b3d57b67c4a5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ostk::physics::Environment::hasCentralCelestialObject</definition>
        <argsstring>() const</argsstring>
        <name>hasCentralCelestialObject</name>
        <briefdescription>
<para>Has central celestial. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if environment has central celestial </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Physics/Environment.hpp" line="85" column="10" bodyfile="src/OpenSpaceToolkit/Physics/Environment.cpp" bodystart="117" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1physics_1_1_environment_1a9a720fa8e7f4b2a30721280a0081716c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ostk::physics::Environment::intersects</definition>
        <argsstring>(const Object::Geometry &amp;aGeometry, const Array&lt; Shared&lt; const Object &gt;&gt; &amp;anObjectToIgnoreArray=Array&lt; Shared&lt; const Object &gt;&gt;::Empty()) const</argsstring>
        <name>intersects</name>
        <param>
          <type>const <ref refid="classostk_1_1physics_1_1environment_1_1_object_1aa7e729b9f9530a07e119ec75ab9506e5" kindref="member">Object::Geometry</ref> &amp;</type>
          <declname>aGeometry</declname>
        </param>
        <param>
          <type>const Array&lt; Shared&lt; const <ref refid="classostk_1_1physics_1_1environment_1_1_object" kindref="compound">Object</ref> &gt;&gt; &amp;</type>
          <declname>anObjectToIgnoreArray</declname>
          <defval>Array&lt; Shared&lt; const <ref refid="classostk_1_1physics_1_1environment_1_1_object" kindref="compound">Object</ref> &gt;&gt;::Empty()</defval>
        </param>
        <briefdescription>
<para>Returns true if a given geometry intersects any of the environment objects. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">aGeometry</parametername>
</parameternamelist>
<parameterdescription>
<para>A geometry </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">(optional)</parametername>
</parameternamelist>
<parameterdescription>
<para>anObjectToIgnoreArray An array of objects to ignore </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if a given geometry intersects any of the environment objects </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Physics/Environment.hpp" line="93" column="10" bodyfile="src/OpenSpaceToolkit/Physics/Environment.cpp" bodystart="122" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1physics_1_1_environment_1a1dde23abaa5abd815eef4d4fbd5355ed" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Array&lt; Shared&lt; const <ref refid="classostk_1_1physics_1_1environment_1_1_object" kindref="compound">Object</ref> &gt; &gt;</type>
        <definition>Array&lt; Shared&lt; const Object &gt; &gt; ostk::physics::Environment::accessObjects</definition>
        <argsstring>() const</argsstring>
        <name>accessObjects</name>
        <briefdescription>
<para>Access objects. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Reference to array of shared pointers to objects </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Physics/Environment.hpp" line="102" column="11" bodyfile="src/OpenSpaceToolkit/Physics/Environment.cpp" bodystart="150" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1physics_1_1_environment_1a4e616b93d403fffa2ed69bedad6b8b99" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Shared&lt; const <ref refid="classostk_1_1physics_1_1environment_1_1_object" kindref="compound">Object</ref> &gt;</type>
        <definition>Shared&lt; const Object &gt; ostk::physics::Environment::accessObjectWithName</definition>
        <argsstring>(const String &amp;aName) const</argsstring>
        <name>accessObjectWithName</name>
        <param>
          <type>const String &amp;</type>
          <declname>aName</declname>
        </param>
        <briefdescription>
<para>Access object with a given name. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">aName</parametername>
</parameternamelist>
<parameterdescription>
<para>An object name </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Reference to shared pointer to object </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Physics/Environment.hpp" line="109" column="12" bodyfile="src/OpenSpaceToolkit/Physics/Environment.cpp" bodystart="160" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1physics_1_1_environment_1a3430014a088dfa3cb52840431d0e0fe8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Shared&lt; const <ref refid="classostk_1_1physics_1_1environment_1_1object_1_1_celestial" kindref="compound">Celestial</ref> &gt;</type>
        <definition>Shared&lt; const Celestial &gt; ostk::physics::Environment::accessCelestialObjectWithName</definition>
        <argsstring>(const String &amp;aName) const</argsstring>
        <name>accessCelestialObjectWithName</name>
        <param>
          <type>const String &amp;</type>
          <declname>aName</declname>
        </param>
        <briefdescription>
<para>Access celestial object with a given name. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">aName</parametername>
</parameternamelist>
<parameterdescription>
<para>A celestial object name </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Reference to shared pointer to celestial object </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Physics/Environment.hpp" line="116" column="12" bodyfile="src/OpenSpaceToolkit/Physics/Environment.cpp" bodystart="185" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1physics_1_1_environment_1a53e23718f3a816378c0f72f53cb491e5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Shared&lt; const <ref refid="classostk_1_1physics_1_1environment_1_1object_1_1_celestial" kindref="compound">Celestial</ref> &gt;</type>
        <definition>Shared&lt; const Celestial &gt; ostk::physics::Environment::accessCentralCelestialObject</definition>
        <argsstring>() const</argsstring>
        <name>accessCentralCelestialObject</name>
        <briefdescription>
<para>Access central celestial. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Shared pointer to central celestial </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Physics/Environment.hpp" line="122" column="12" bodyfile="src/OpenSpaceToolkit/Physics/Environment.cpp" bodystart="200" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1physics_1_1_environment_1a13c55249f309570bb9559191435c4a39" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classostk_1_1physics_1_1time_1_1_instant" kindref="compound">Instant</ref></type>
        <definition>Instant ostk::physics::Environment::getInstant</definition>
        <argsstring>() const</argsstring>
        <name>getInstant</name>
        <briefdescription>
<para>Get instant. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Instant </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Physics/Environment.hpp" line="128" column="13" bodyfile="src/OpenSpaceToolkit/Physics/Environment.cpp" bodystart="217" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1physics_1_1_environment_1aaa1e5f8c43b809d9b0d91ecf58c549b5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Array&lt; String &gt;</type>
        <definition>Array&lt; String &gt; ostk::physics::Environment::getObjectNames</definition>
        <argsstring>() const</argsstring>
        <name>getObjectNames</name>
        <briefdescription>
<para>Get names of objects. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Array of objects names </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Physics/Environment.hpp" line="134" column="11" bodyfile="src/OpenSpaceToolkit/Physics/Environment.cpp" bodystart="227" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1physics_1_1_environment_1aeb00f7751b4c1435ddc584da7b3b22e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ostk::physics::Environment::setInstant</definition>
        <argsstring>(const Instant &amp;anInstant)</argsstring>
        <name>setInstant</name>
        <param>
          <type>const <ref refid="classostk_1_1physics_1_1time_1_1_instant" kindref="compound">Instant</ref> &amp;</type>
          <declname>anInstant</declname>
        </param>
        <briefdescription>
<para>Set instant. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">anInstant</parametername>
</parameternamelist>
<parameterdescription>
<para>An instant </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Physics/Environment.hpp" line="140" column="10" bodyfile="src/OpenSpaceToolkit/Physics/Environment.cpp" bodystart="246" bodyend="259"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1physics_1_1_environment_1abda4b0e041bf498e8fd94e10f94b65fa" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ostk::physics::Environment::isPositionInEclipse</definition>
        <argsstring>(const Position &amp;aPosition, const bool &amp;includePenumbra=true) const</argsstring>
        <name>isPositionInEclipse</name>
        <param>
          <type>const <ref refid="classostk_1_1physics_1_1coordinate_1_1_position" kindref="compound">Position</ref> &amp;</type>
          <declname>aPosition</declname>
        </param>
        <param>
          <type>const bool &amp;</type>
          <declname>includePenumbra</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Is position in eclipse. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">aPosition</parametername>
</parameternamelist>
<parameterdescription>
<para>A position </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">includePenumbra</parametername>
</parameternamelist>
<parameterdescription>
<para>(optional) Whether to include penumbra in eclipse calculation. Defaults to true. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the position is in eclipse </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Physics/Environment.hpp" line="149" column="10" bodyfile="src/OpenSpaceToolkit/Physics/Environment.cpp" bodystart="261" bodyend="309"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classostk_1_1physics_1_1_environment_1a7bc4b39898452fbe5ce3a8de75ad2596" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;anOutputStream, const Environment &amp;anEnvironment)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>anOutputStream</declname>
        </param>
        <param>
          <type>const <ref refid="classostk_1_1physics_1_1_environment" kindref="compound">Environment</ref> &amp;</type>
          <declname>anEnvironment</declname>
        </param>
        <briefdescription>
<para>Output stream operator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">anOutputStream</parametername>
</parameternamelist>
<parameterdescription>
<para>An output stream </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">anEnvironment</parametername>
</parameternamelist>
<parameterdescription>
<para>An environment </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A reference to output stream </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Physics/Environment.hpp" line="66" column="12" bodyfile="src/OpenSpaceToolkit/Physics/Environment.cpp" bodystart="63" bodyend="87"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classostk_1_1physics_1_1_environment_1a0a6b08b9a19de02e9eeacdb0fcc0c588" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classostk_1_1physics_1_1_environment" kindref="compound">Environment</ref></type>
        <definition>Environment ostk::physics::Environment::Undefined</definition>
        <argsstring>()</argsstring>
        <name>Undefined</name>
        <briefdescription>
<para>Get gravitational field at position. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">aPosition</parametername>
</parameternamelist>
<parameterdescription>
<para>A position </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Gravitational field vector</para>
</simplesect>
Get magnetic field at position</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">aPosition</parametername>
</parameternamelist>
<parameterdescription>
<para>A position </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Magnetic field vector</para>
</simplesect>
Constructs an undefined environment</para>
<para><programlisting><codeline><highlight class="normal">Environment<sp/>environment<sp/>=<sp/>Environment::Undefined()<sp/>;</highlight></codeline>
<codeline><highlight class="normal">environment.isDefined()<sp/>;<sp/>//<sp/>False</highlight></codeline>
</programlisting></para>
<para><simplesect kind="return"><para>Undefined environment </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Physics/Environment.hpp" line="176" column="24" bodyfile="src/OpenSpaceToolkit/Physics/Environment.cpp" bodystart="311" bodyend="314"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1physics_1_1_environment_1aed930ee9cfbea432470ae77137d7acde" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classostk_1_1physics_1_1_environment" kindref="compound">Environment</ref></type>
        <definition>Environment ostk::physics::Environment::Default</definition>
        <argsstring>(const bool &amp;setGlobalInstance=false)</argsstring>
        <name>Default</name>
        <param>
          <type>const bool &amp;</type>
          <declname>setGlobalInstance</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Constructs a default environment. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>                Contains Earth, Sun and Moon, with SPICE-based ephemeris.
</verbatim></para>
<para><programlisting><codeline><highlight class="normal">Environment<sp/>environment<sp/>=<sp/>Environment::Default();</highlight></codeline>
</programlisting> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">setGlobalInstance</parametername>
</parameternamelist>
<parameterdescription>
<para>True if the global environment instance should be set with the default</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Undefined environment </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Physics/Environment.hpp" line="190" column="24" bodyfile="src/OpenSpaceToolkit/Physics/Environment.cpp" bodystart="316" bodyend="339"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1physics_1_1_environment_1ac0923de09ec10dd8260e5795de1a0a59" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ostk::physics::Environment::ResetGlobalInstance</definition>
        <argsstring>()</argsstring>
        <name>ResetGlobalInstance</name>
        <briefdescription>
<para>Reset the singleton instance of the environment to null. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Physics/Environment.hpp" line="194" column="17" bodyfile="src/OpenSpaceToolkit/Physics/Environment.cpp" bodystart="341" bodyend="345"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1physics_1_1_environment_1af7ffd3a2fc9578a67e5179ad5d1b555a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Shared&lt; <ref refid="classostk_1_1physics_1_1_environment" kindref="compound">Environment</ref> &gt;</type>
        <definition>Shared&lt; Environment &gt; ostk::physics::Environment::AccessGlobalInstance</definition>
        <argsstring>()</argsstring>
        <name>AccessGlobalInstance</name>
        <briefdescription>
<para>Get the singleton instance of the environment. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Shared pointer to the singleton instance </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Physics/Environment.hpp" line="200" column="19" bodyfile="src/OpenSpaceToolkit/Physics/Environment.cpp" bodystart="347" bodyend="357"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1physics_1_1_environment_1ac8f62fbb55b620f5401e9c96ec6d459b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ostk::physics::Environment::HasGlobalInstance</definition>
        <argsstring>()</argsstring>
        <name>HasGlobalInstance</name>
        <briefdescription>
<para>Checks if the global instance is set. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if the global instance is set </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Physics/Environment.hpp" line="206" column="17" bodyfile="src/OpenSpaceToolkit/Physics/Environment.cpp" bodystart="365" bodyend="369"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classostk_1_1physics_1_1_environment_1a042a6bfbec071ee0fe0beba942e69b13" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ostk::physics::Environment::SetGlobalInstance</definition>
        <argsstring>(const Shared&lt; Environment &gt; &amp;anInstance)</argsstring>
        <name>SetGlobalInstance</name>
        <param>
          <type>const Shared&lt; <ref refid="classostk_1_1physics_1_1_environment" kindref="compound">Environment</ref> &gt; &amp;</type>
          <declname>anInstance</declname>
        </param>
        <briefdescription>
<para>Set the singleton instance of the environment. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">instance</parametername>
</parameternamelist>
<parameterdescription>
<para>Shared pointer to the new singleton instance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Physics/Environment.hpp" line="217" column="17" bodyfile="src/OpenSpaceToolkit/Physics/Environment.cpp" bodystart="359" bodyend="363"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classostk_1_1physics_1_1_environment" kindref="compound">Environment</ref> modeling. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/OpenSpaceToolkit/Physics/Environment.hpp" line="33" column="1" bodyfile="include/OpenSpaceToolkit/Physics/Environment.hpp" bodystart="32" bodyend="218"/>
    <listofallmembers>
      <member refid="classostk_1_1physics_1_1_environment_1a3430014a088dfa3cb52840431d0e0fe8" prot="public" virt="non-virtual"><scope>ostk::physics::Environment</scope><name>accessCelestialObjectWithName</name></member>
      <member refid="classostk_1_1physics_1_1_environment_1a53e23718f3a816378c0f72f53cb491e5" prot="public" virt="non-virtual"><scope>ostk::physics::Environment</scope><name>accessCentralCelestialObject</name></member>
      <member refid="classostk_1_1physics_1_1_environment_1af7ffd3a2fc9578a67e5179ad5d1b555a" prot="public" virt="non-virtual"><scope>ostk::physics::Environment</scope><name>AccessGlobalInstance</name></member>
      <member refid="classostk_1_1physics_1_1_environment_1a1dde23abaa5abd815eef4d4fbd5355ed" prot="public" virt="non-virtual"><scope>ostk::physics::Environment</scope><name>accessObjects</name></member>
      <member refid="classostk_1_1physics_1_1_environment_1a4e616b93d403fffa2ed69bedad6b8b99" prot="public" virt="non-virtual"><scope>ostk::physics::Environment</scope><name>accessObjectWithName</name></member>
      <member refid="classostk_1_1physics_1_1_environment_1a149113884598532bd3f7775008c72f81" prot="private" virt="non-virtual"><scope>ostk::physics::Environment</scope><name>centralCelestialObject_</name></member>
      <member refid="classostk_1_1physics_1_1_environment_1aed930ee9cfbea432470ae77137d7acde" prot="public" virt="non-virtual"><scope>ostk::physics::Environment</scope><name>Default</name></member>
      <member refid="classostk_1_1physics_1_1_environment_1a6e305f5d49ea34ed7e37459086c727f8" prot="public" virt="non-virtual"><scope>ostk::physics::Environment</scope><name>Environment</name></member>
      <member refid="classostk_1_1physics_1_1_environment_1af55853ce0d679a89f36c335719854784" prot="public" virt="non-virtual"><scope>ostk::physics::Environment</scope><name>Environment</name></member>
      <member refid="classostk_1_1physics_1_1_environment_1a13c55249f309570bb9559191435c4a39" prot="public" virt="non-virtual"><scope>ostk::physics::Environment</scope><name>getInstant</name></member>
      <member refid="classostk_1_1physics_1_1_environment_1aaa1e5f8c43b809d9b0d91ecf58c549b5" prot="public" virt="non-virtual"><scope>ostk::physics::Environment</scope><name>getObjectNames</name></member>
      <member refid="classostk_1_1physics_1_1_environment_1a443a17fa0d23109c0918b3d57b67c4a5" prot="public" virt="non-virtual"><scope>ostk::physics::Environment</scope><name>hasCentralCelestialObject</name></member>
      <member refid="classostk_1_1physics_1_1_environment_1ac8f62fbb55b620f5401e9c96ec6d459b" prot="public" virt="non-virtual"><scope>ostk::physics::Environment</scope><name>HasGlobalInstance</name></member>
      <member refid="classostk_1_1physics_1_1_environment_1af83819fdcd1586e185ce21e92ce574ed" prot="public" virt="non-virtual"><scope>ostk::physics::Environment</scope><name>hasObjectWithName</name></member>
      <member refid="classostk_1_1physics_1_1_environment_1a4bb957c2f0141946aeef523afa190148" prot="private" virt="non-virtual"><scope>ostk::physics::Environment</scope><name>instant_</name></member>
      <member refid="classostk_1_1physics_1_1_environment_1a9a720fa8e7f4b2a30721280a0081716c" prot="public" virt="non-virtual"><scope>ostk::physics::Environment</scope><name>intersects</name></member>
      <member refid="classostk_1_1physics_1_1_environment_1ac597f4d54313d272bc24f62a9f2c0f5c" prot="public" virt="non-virtual"><scope>ostk::physics::Environment</scope><name>isDefined</name></member>
      <member refid="classostk_1_1physics_1_1_environment_1abda4b0e041bf498e8fd94e10f94b65fa" prot="public" virt="non-virtual"><scope>ostk::physics::Environment</scope><name>isPositionInEclipse</name></member>
      <member refid="classostk_1_1physics_1_1_environment_1a071c4dc3b6a81302279464b954d70cdd" prot="private" virt="non-virtual"><scope>ostk::physics::Environment</scope><name>objects_</name></member>
      <member refid="classostk_1_1physics_1_1_environment_1a7bc4b39898452fbe5ce3a8de75ad2596" prot="public" virt="non-virtual"><scope>ostk::physics::Environment</scope><name>operator&lt;&lt;</name></member>
      <member refid="classostk_1_1physics_1_1_environment_1ac0923de09ec10dd8260e5795de1a0a59" prot="public" virt="non-virtual"><scope>ostk::physics::Environment</scope><name>ResetGlobalInstance</name></member>
      <member refid="classostk_1_1physics_1_1_environment_1a042a6bfbec071ee0fe0beba942e69b13" prot="private" virt="non-virtual"><scope>ostk::physics::Environment</scope><name>SetGlobalInstance</name></member>
      <member refid="classostk_1_1physics_1_1_environment_1aeb00f7751b4c1435ddc584da7b3b22e7" prot="public" virt="non-virtual"><scope>ostk::physics::Environment</scope><name>setInstant</name></member>
      <member refid="classostk_1_1physics_1_1_environment_1a0a6b08b9a19de02e9eeacdb0fcc0c588" prot="public" virt="non-virtual"><scope>ostk::physics::Environment</scope><name>Undefined</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
